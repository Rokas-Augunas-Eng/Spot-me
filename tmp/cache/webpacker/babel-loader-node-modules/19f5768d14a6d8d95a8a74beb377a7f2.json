{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nvar initMapbox = function initMapbox() {\n  var mapElement = document.getElementById('map');\n\n  var fitMapToMarkers = function fitMapToMarkers(map, markers) {\n    var bounds = new mapboxgl.LngLatBounds();\n    markers.forEach(function (marker) {\n      return bounds.extend([marker.lng, marker.lat]);\n    });\n    map.fitBounds(bounds, {\n      padding: 70,\n      maxZoom: 15,\n      duration: 0\n    });\n  };\n\n  if (mapElement) {\n    // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey; // if  Jess to insert here\n\n    if (mapElement.dataset.center) {\n      var coordinates = JSON.parse(mapElement.dataset.center);\n      var map = new mapboxgl.Map({\n        container: 'map',\n        center: [coordinates[1], coordinates[0]],\n        zoom: 13,\n        style: 'mapbox://styles/mapbox/streets-v10'\n      });\n      var markers = JSON.parse(mapElement.dataset.markers);\n      console.log(markers);\n      markers.forEach(function (marker) {\n        // const popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n        var element = document.createElement('div');\n        element.className = 'marker';\n        element.style.backgroundImage = \"url('\".concat(marker.image_url, \"')\");\n        element.style.backgroundSize = 'contain';\n        element.style.width = '22px';\n        element.style.height = '40px';\n        new mapboxgl.Marker(element).setLngLat([marker.lng, marker.lat]) // .setPopup(popup) // add this\n        .addTo(map);\n      });\n    } else {\n      // else\n      var _map = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v10'\n      });\n\n      var _markers = JSON.parse(mapElement.dataset.markers);\n\n      _markers.forEach(function (marker) {\n        var popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n        var element = document.createElement('div');\n        element.className = 'marker';\n        element.style.backgroundImage = \"url('\".concat(marker.image_url, \"')\");\n        element.style.backgroundSize = 'contain';\n        element.style.width = '22px';\n        element.style.height = '40px';\n        new mapboxgl.Marker(element).setLngLat([marker.lng, marker.lat]).setPopup(popup) // add this\n        .addTo(_map);\n      });\n\n      fitMapToMarkers(_map, _markers);\n    }\n\n    ;\n  }\n\n  ;\n};\n\nexport { initMapbox };","map":{"version":3,"sources":["/home/rokas/code/augunasr/Spot-me/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","initMapbox","mapElement","document","getElementById","fitMapToMarkers","map","markers","bounds","LngLatBounds","forEach","marker","extend","lng","lat","fitBounds","padding","maxZoom","duration","accessToken","dataset","mapboxApiKey","center","coordinates","JSON","parse","Map","container","zoom","style","console","log","element","createElement","className","backgroundImage","image_url","backgroundSize","width","height","Marker","setLngLat","addTo","popup","Popup","setHTML","infoWindow","setPopup"],"mappings":"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","sourcesContent":["import mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst initMapbox = () => {\n  const mapElement = document.getElementById('map');\n  const fitMapToMarkers = (map, markers) => {\n    const bounds = new mapboxgl.LngLatBounds();\n    markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n    map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n  };\n  if (mapElement) { // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n  // if  Jess to insert here\n  if (mapElement.dataset.center) {\n      const coordinates = JSON.parse(mapElement.dataset.center);\n      const map = new mapboxgl.Map({\n        container: 'map',\n        center: [coordinates[1], coordinates[0]],\n        zoom: 13,\n        style: 'mapbox://styles/mapbox/streets-v10',\n      });\n      const markers = JSON.parse(mapElement.dataset.markers);\n      console.log(markers)\n      markers.forEach((marker) => {\n        // const popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n        const element = document.createElement('div');\n        element.className = 'marker';\n        element.style.backgroundImage = `url('${marker.image_url}')`;\n        element.style.backgroundSize = 'contain';\n        element.style.width = '22px';\n        element.style.height = '40px';\n        new mapboxgl.Marker(element)\n        .setLngLat([ marker.lng, marker.lat ])\n        // .setPopup(popup) // add this\n        .addTo(map);\n      });\n    } else {\n  // else\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v10',\n    });\n\n    const markers = JSON.parse(mapElement.dataset.markers);\n    markers.forEach((marker) => {\n      const popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n      const element = document.createElement('div');\n      element.className = 'marker';\n      element.style.backgroundImage = `url('${marker.image_url}')`;\n      element.style.backgroundSize = 'contain';\n      element.style.width = '22px';\n      element.style.height = '40px';\n      new mapboxgl.Marker(element)\n      .setLngLat([ marker.lng, marker.lat ])\n      .setPopup(popup) // add this\n      .addTo(map);\n    });\n    fitMapToMarkers(map, markers);\n   };\n  };\n};\nexport { initMapbox };\n"]},"metadata":{},"sourceType":"module"}