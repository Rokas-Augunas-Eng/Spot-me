{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nvar initMapbox = function initMapbox() {\n  var mapElement = document.getElementById('map');\n\n  if (mapElement) {\n    // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n\n    var _map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v10'\n    });\n  }\n};\n\nexport { initMapbox };\n\nif (mapElement) {\n  // [ ... ]\n  var _markers = JSON.parse(mapElement.dataset.markers);\n\n  _markers.forEach(function (marker) {\n    new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).addTo(map);\n  });\n}\n\nvar fitMapToMarkers = function fitMapToMarkers(map, markers) {\n  var bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(function (marker) {\n    return bounds.extend([marker.lng, marker.lat]);\n  });\n  map.fitBounds(bounds, {\n    padding: 70,\n    maxZoom: 15,\n    duration: 0\n  });\n};\n\nif (mapElement) {\n  // [ ... ]\n  fitMapToMarkers(map, markers);\n}","map":{"version":3,"sources":["/home/rokas/code/augunasr/Spot-me/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","initMapbox","mapElement","document","getElementById","accessToken","dataset","mapboxApiKey","map","Map","container","style","markers","JSON","parse","forEach","marker","Marker","setLngLat","lng","lat","addTo","fitMapToMarkers","bounds","LngLatBounds","extend","fitBounds","padding","maxZoom","duration"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAO,8BAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;;AAEA,MAAIF,UAAJ,EAAgB;AAAE;AAChBF,IAAAA,QAAQ,CAACK,WAAT,GAAuBH,UAAU,CAACI,OAAX,CAAmBC,YAA1C;;AACA,QAAMC,IAAG,GAAG,IAAIR,QAAQ,CAACS,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,KADgB;AAE3BC,MAAAA,KAAK,EAAE;AAFoB,KAAjB,CAAZ;AAID;AACF,CAVD;;AAYA,SAASV,UAAT;;AAEA,IAAIC,UAAJ,EAAgB;AACd;AACA,MAAMU,QAAO,GAAGC,IAAI,CAACC,KAAL,CAAWZ,UAAU,CAACI,OAAX,CAAmBM,OAA9B,CAAhB;;AACAA,EAAAA,QAAO,CAACG,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,QAAIhB,QAAQ,CAACiB,MAAb,GACGC,SADH,CACa,CAAEF,MAAM,CAACG,GAAT,EAAcH,MAAM,CAACI,GAArB,CADb,EAEGC,KAFH,CAESb,GAFT;AAGD,GAJD;AAKD;;AAED,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACd,GAAD,EAAMI,OAAN,EAAkB;AACxC,MAAMW,MAAM,GAAG,IAAIvB,QAAQ,CAACwB,YAAb,EAAf;AACAZ,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM;AAAA,WAAIO,MAAM,CAACE,MAAP,CAAc,CAAET,MAAM,CAACG,GAAT,EAAcH,MAAM,CAACI,GAArB,CAAd,CAAJ;AAAA,GAAtB;AACAZ,EAAAA,GAAG,CAACkB,SAAJ,CAAcH,MAAd,EAAsB;AAAEI,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,OAAO,EAAE,EAAxB;AAA4BC,IAAAA,QAAQ,EAAE;AAAtC,GAAtB;AACD,CAJD;;AAMA,IAAI3B,UAAJ,EAAgB;AACd;AACAoB,EAAAA,eAAe,CAACd,GAAD,EAAMI,OAAN,CAAf;AACD","sourcesContent":["import mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst initMapbox = () => {\n  const mapElement = document.getElementById('map');\n\n  if (mapElement) { // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v10'\n    });\n  }\n};\n\nexport { initMapbox };\n\nif (mapElement) {\n  // [ ... ]\n  const markers = JSON.parse(mapElement.dataset.markers);\n  markers.forEach((marker) => {\n    new mapboxgl.Marker()\n      .setLngLat([ marker.lng, marker.lat ])\n      .addTo(map);\n  });\n}\n\nconst fitMapToMarkers = (map, markers) => {\n  const bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n  map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n};\n\nif (mapElement) {\n  // [ ... ]\n  fitMapToMarkers(map, markers);\n}"]},"metadata":{},"sourceType":"module"}