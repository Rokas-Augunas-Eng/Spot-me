{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nvar initMapbox = function initMapbox() {\n  var mapElement = document.getElementById('map');\n\n  if (mapElement) {\n    var fitMapToMarkers = function fitMapToMarkers(map, markers) {\n      var bounds = new mapboxgl.LngLatBounds();\n      markers.forEach(function (marker) {\n        return bounds.extend([marker.lng, marker.lat]);\n      });\n      map.fitBounds(bounds, {\n        padding: 70,\n        maxZoom: 15,\n        duration: 0\n      });\n    };\n\n    if (mapElement) {\n      // only build a map if there's a div#map to inject into\n      mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n\n      var _map = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v10'\n      });\n\n      var _markers = JSON.parse(mapElement.dataset.markers);\n\n      _markers.forEach(function (marker) {\n        new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).addTo(_map);\n      });\n    }\n\n    fitMapToMarkers(map, markers);\n  }\n};\n\nexport { initMapbox };","map":{"version":3,"sources":["/home/rokas/code/augunasr/Spot-me/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","initMapbox","mapElement","document","getElementById","fitMapToMarkers","map","markers","bounds","LngLatBounds","forEach","marker","extend","lng","lat","fitBounds","padding","maxZoom","duration","accessToken","dataset","mapboxApiKey","Map","container","style","JSON","parse","Marker","setLngLat","addTo"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAO,8BAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;;AACA,MAAGF,UAAH,EAAc;AACZ,QAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,OAAN,EAAkB;AAC5C,UAAMC,MAAM,GAAG,IAAIR,QAAQ,CAACS,YAAb,EAAf;AACAF,MAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM;AAAA,eAAIH,MAAM,CAACI,MAAP,CAAc,CAAED,MAAM,CAACE,GAAT,EAAcF,MAAM,CAACG,GAArB,CAAd,CAAJ;AAAA,OAAtB;AACAR,MAAAA,GAAG,CAACS,SAAJ,CAAcP,MAAd,EAAsB;AAAEQ,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,OAAO,EAAE,EAAxB;AAA4BC,QAAAA,QAAQ,EAAE;AAAtC,OAAtB;AACD,KAJG;;AAMF,QAAIhB,UAAJ,EAAgB;AAAE;AAChBF,MAAAA,QAAQ,CAACmB,WAAT,GAAuBjB,UAAU,CAACkB,OAAX,CAAmBC,YAA1C;;AACA,UAAMf,IAAG,GAAG,IAAIN,QAAQ,CAACsB,GAAb,CAAiB;AAC3BC,QAAAA,SAAS,EAAE,KADgB;AAE3BC,QAAAA,KAAK,EAAE;AAFoB,OAAjB,CAAZ;;AAIA,UAAMjB,QAAO,GAAGkB,IAAI,CAACC,KAAL,CAAWxB,UAAU,CAACkB,OAAX,CAAmBb,OAA9B,CAAhB;;AACFA,MAAAA,QAAO,CAACG,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,YAAIX,QAAQ,CAAC2B,MAAb,GACGC,SADH,CACa,CAAEjB,MAAM,CAACE,GAAT,EAAcF,MAAM,CAACG,GAArB,CADb,EAEGe,KAFH,CAESvB,IAFT;AAGD,OAJD;AAKC;;AACDD,IAAAA,eAAe,CAACC,GAAD,EAAMC,OAAN,CAAf;AACC;AAEF,CAzBD;;AA2BA,SAASN,UAAT","sourcesContent":["import mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst initMapbox = () => {\n  const mapElement = document.getElementById('map');\n  if(mapElement){\n    const fitMapToMarkers = (map, markers) => {\n  const bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n  map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n};\n\n  if (mapElement) { // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v10'\n    });\n    const markers = JSON.parse(mapElement.dataset.markers);\n  markers.forEach((marker) => {\n    new mapboxgl.Marker()\n      .setLngLat([ marker.lng, marker.lat ])\n      .addTo(map);\n  });\n  }\n  fitMapToMarkers(map, markers);\n  }\n  \n};\n\nexport { initMapbox };\n"]},"metadata":{},"sourceType":"module"}